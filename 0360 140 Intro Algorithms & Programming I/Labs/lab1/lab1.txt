Script started on Mon 29 Sep 2014 08:40:45 PM EDT
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cat lab1_q1.c
/*
 * ASSIGNMENT	: LAB 1
 * FILE		: lab1_q1.c
 * AUTHOR	: Jason Choquette	
 * DATE		: Sep 22/14
 * DESCRIPTION	: This file will ask the user for their name and then
 * 		  will output a message with the user's name.
 * */

#include <stdio.h>


int main(void)
{
  // ask the user for their name
  printf("\n\nWhat is your first name? ");
  
  char name[30]; // used to store the user's name

  // get the user's name and store it
  scanf("%s", name);

  // print a message with the user's name
  printf("Hello %s, how are you?\n", name);
  printf("I hope you feel 100%% today!\n\n\n");

  getchar();

  return 0;
}
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cc lab1_q1.c
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ ./a.out 


What is your first name? Jason
Hello Jason, how are you?
I hope you feel 100% today!


choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cat lab1_q2.c
/*
 * ASSIGNMENT   : LAB 1
 * FILE         : lab2_q2.c
 * AUTHOR       : Jason Choquette
 * ID		: 104337378       
 * DATE         : Sep 22/14
 * DESCRIPTION  : Read a positive integer num1 from the standard input device (scanf), and calculate the quotient and the
 * 		  remainder of num1 when divided by 3. Print the results along with the appropriate messages.
 */



#include <stdio.h>

// set a constant to avoid magic numbers!!
#define QUOT 3

int main(void)
{
  // declare and initialize the num1 variable	
  int num1 = 0;
  
  // ask the user for a positive integer
  printf("\nPlease enter a positive integer:  ");
  
  // store the integer
  scanf("%d", &num1);

  // print the quotient and the remainder of num1. 
  // just do simple evaluations inside the printf for terseness.
  // using the modulus operator for the remainder
  printf("\nThe quotient of %d/%d is: %d", num1, QUOT, num1 / QUOT);
  printf("\nThe remainder of %d/%d is: %d\n\n", num1, QUOT, num1 % QUOT);

  // ensure we can see the printed results 
  getchar();

  return 0;
}
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cc lab1_q2.c
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ ./a.out 

Please enter a positive integer:  5

The quotient of 5/3 is: 1
The remainder of 5/3 is: 2

choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cat lab1_q3.c
/*
 * ASSIGNMENT   : LAB 1
 * FILE         : lab2_q3.c
 * AUTHOR       : Jason Choquette
 * ID           : 104337378       
 * DATE         : Sep 22/14
 * DESCRIPTION  : Print my timetable for this class' lecture, using tabs and spaces for a cleaner interface.
 */


#include <stdio.h>


int main(void)
{
  // define a seperator to avoid typing
  char * sep = "+---------------------------------------+\n";
  // since each lecture is at the same time, just store in a variable
  char * time = "\t5:30 pm\t\t6:50 pm\n";
  printf("\n\n cs140,  F2014,  lecture schedule:\n");
  printf("%s",sep);
  printf(" Day\t\tStart time\tEnd time\n");
  printf("%s",sep);
  printf(" Monday\t%s", time);
  printf(" Wednesday%s", time);
  printf("%s", sep);
  printf("\n\n");
  return 0;
}
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cc lab1_q3.c
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ ./a.out 


 cs140,  F2014,  lecture schedule:
+---------------------------------------+
 Day		Start time	End time
+---------------------------------------+
 Monday		5:30 pm		6:50 pm
 Wednesday	5:30 pm		6:50 pm
+---------------------------------------+


choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cat lab1_q4.c
/*
 * ASSIGNMENT	: LAB 1
 * FILE		: lab1_q4.c
 * AUTHOR	: Jason Choquette	
 * DATE		: Sep 22/14
 * DESCRIPTION	: Read a float number (with any number of decimal digits), round it to the precision of only two decimal
 *		  points and print the result: (use the specifier %.2f in printf, is there another way to round?)
 *		  - will have to link libraries during compilatoin. Use cc lab1_q4.c -lm (-lm = 'library math')
 **/

#include <stdio.h>
#include <math.h> // for the library's 'roundf' function.

int main(void)
{
  // declare and store a floating point number
  float num1 = 0.0; 
  printf("\n\nPlease enter a number with decimal values: ");

  // store the user's input
  scanf("%f", &num1);
 
  // print out the the user's input rounded to two decimal places using <math.h> library's 'roundf' function
  printf("The rounded value to 2 decimal places is: %.2f\n\n", roundf(num1 * 100) / 100);

  getchar();

  return 0;
}
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ ccat lab1_q4.c[1P lab1_q4.c[1P lab1_q4.c[1P lab1_q4.cc lab1_q4.cc lab1_q4.c
/tmp/ccpO3459.o: In function `main':
lab1_q4.c:(.text+0x44): undefined reference to `roundf'
collect2: ld returned 1 exit status
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cc lab1_q4.c -lm
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ ./a.out 


Please enter a number with decimal values: 45.25
The rounded value to 2 decimal places is: 45.25

choquetj@bravo:~/cs140/lab1/cs140 lab 1$ ./a.out 


Please enter a number with decimal values: 45.23547
The rounded value to 2 decimal places is: 45.24

choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cat lab1_q5.c
/*
 * ASSIGNMENT	: LAB 1
 * FILE		: lab1_q5.c
 * AUTHOR	: Jason Choquette	
 * DATE		: Sep 22/14
 * DESCRIPTION	: Read three integers from the standard input device and print their sum and average (rounded to 2
 *		  decimal places).
 * */

#include <stdio.h>


int main(void)
{
  // declare and initialize variables to store user input.
  int num1 = 0;
  int num2 = 0;
  int num3 = 0;

  printf("\n\nPlease enter three integers: ");
 
  // store usre's input into the variables
  scanf("%d %d %d", &num1, &num2, &num3);
 
  // store the sum of the variables in another variable
  float sum = num1 + num2 + num3;

  // print the sum
  printf("\nTheir sum is: %.f\n", sum);

  // print the average
  printf("Their average is: %.2f\n\n", sum / 3);

  getchar();

  return 0;
}
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cat lab1_q5.c[1P lab1_q5.c[1P lab1_q5.cc lab1_q5.c
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ ./a.out 


Please enter three integers: 45 12 78

Their sum is: 135
Their average is: 45.00

choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cat lab1_q6.c
/*
 * ASSIGNMENT	: LAB 1
 * FILE		: lab1_q6.c
 * AUTHOR	: Jason Choquette	
 * DATE		: Sep 22/14
 * DESCRIPTION	: Read integer x from the input and calculate the following functions:
		  f(x) = -2x+5
		  g(x) = x 3 +2x-4
		  h(x) = (3x+2) / (2x-4)
 * */

#include <stdio.h>
#include <math.h> // use the library's 'pow' function

int main(void)
{
  // declare and initialize variable to store user input.
  int x = 0;
  printf("\n\nPlease enter a value for integer x: ");

  // store user's input
  scanf("%d", &x);

  // define and calculate function 1 
  int func1 = -2 * x + 5;
  
  // define and calculate function 2
  int func2 = (pow(x, 3) + 2 * x - 4); // 'pow' defined in <math.h>
  
  // define and calculate function 3
  float func3 = ((3 * (float) x) + 2) / ((2 * (float) x) - 4);

  // print the results of each of the functions
  printf("\n\tf(%d) = -2(%d) + 5\t\t = %d\n", x, x, func1);
  printf("\tg(%d) = (%d)^3 + 2(%d) - 4\t\t = %d\n", x, x, x, func2);
  printf("\th(%d) = (3(%d)+2) / (2(%d)-4)\t = %.2f\n\n", x, x, x, func3);

  getchar();

  return 0;
}
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cat lab1_q6.c[1P lab1_q6.c[1P lab1_q6.cc lab1_q6.c
/tmp/cc0zNshy.o: In function `main':
lab1_q6.c:(.text+0x63): undefined reference to `pow'
collect2: ld returned 1 exit status
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cc lab1_q6.c -lm
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ ./a.out 


Please enter a value for integer x: 75

	f(75) = -2(75) + 5		 = -145
	g(75) = (75)^3 + 2(75) - 4		 = 422021
	h(75) = (3(75)+2) / (2(75)-4)	 = 1.55

choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cat lab1_q7.c
/*
 * ASSIGNMENT	: LAB 1
 * FILE		: lab1_q7.c
 * AUTHOR	: Jason Choquette	
 * DATE		: Sep 22/14
 * DESCRIPTION	: The following formula is to convert the temperature from (C)elsius to (F)ahrenheit.
 *		  F = 1.8 C + 32
 *		  The code will prompt the user to enter the temperature in Celsius and then convert and prints its
 *		  equivalent in Fahrenheit.
 *		  Next, it will prompt the user to enter temperature in Fahrenheit then convert and prints its equivalent
 *		  in Celsius.
 * */


#include <stdio.h>

int main(void)
{
  // store and initialize celcius and fahrenheit variables
  float celc = 0.0;
  float far = 0.0;

  printf("\n\nPlease enter a temperature in Celcius: ");

  // store the celcius temperature
  scanf("%f", &celc);

  // print the conversion from celcius to fahrenheit
  printf("%.2f Celcius = %.2f Farhenheit\n\n", celc, 1.8 * celc + 32);
  
  printf("Please enter a temperature in Farhenheit: ");

  // store the fahrenheit temperature 
  scanf("%f", &far);
 
  // print the conversion from fahrenheit to celcius 
  printf("%.2f Farhenheit = %.2f Celcius\n\n", far, (far - 32) / 1.8);

  getchar();

  return 0;
}
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cat lab1_q7.c[C[1P lab1_q7.c[1P lab1_q7.cc lab1_q7.c
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ ./a.out 


Please enter a temperature in Celcius: 45
45.00 Celcius = 113.00 Farhenheit

Please enter a temperature in Farhenheit: 62
62.00 Farhenheit = 16.67 Celcius

choquetj@bravo:~/cs140/lab1/cs140 lab 1$ c[K./a.out cc lab1_q7.c[1@at[C[C[C[C[C[C[C[C[C[C[1P.c8.c
/*
 * ASSIGNMENT	: LAB 1
 * FILE		: lab1_q8.c
 * AUTHOR	: Jason Choquette	
 * DATE		: Sep 22/14
 * DESCRIPTION	: Print the following exactly: '80/100' looks like "80%" that's about $80.00
 *		  The program will use printf's '\' escape character for formatting and %% to print the percentage symbol
 * */

#include <stdio.h>


int main(void)
{
  printf("\n\n\'80/100\' looks like \"80%%\" that's about $80.00\n\n");

  return 0;
}
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ cat lab1_q8.c[5P./a.out cat lab1_q8.c[1P lab1_q8.c[1P lab1_q8.cc lab1_q8.c
choquetj@bravo:~/cs140/lab1/cs140 lab 1$ ./a.out 


'80/100' looks like "80%" that's about $80.00

choquetj@bravo:~/cs140/lab1/cs140 lab 1$ exit
exit

Script done on Mon 29 Sep 2014 08:48:07 PM EDT
