Script started on Thu 02 Oct 2014 05:42:15 PM EDT
]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ exit./a.out 1 1 1 1 2[1P./a.out cc lab2_q1.c[1P lab2_q1.ca lab2_q1.ct lab2_q1.c
/*
* ASSIGNMENT	: Lab 2
* FILE	 		: lab2_q1.c
* AUTHOR		: Jason Choquette
* ID			: 104337378
* DATE			: October 01/14
* DESCRIPTION	: This program reads in five integers and then determines and 
				  prints the largest and the smallest integers in the group 

                  Example:
                  
				  Please enter five integers: 5 12 -10 0 1
                  The Max is : 12
                  The Min is : -10
*/


#include <stdio.h> // printf, scanf, getchar


// program entry
int main(void)
{
	// declare and initialize number variables used to store the user's numbers
	int num1 = 0;
	int num2 = 0;
	int num3 = 0;
	int num4 = 0;
	int num5 = 0;

	printf("\n\nPlease enter five integers: ");

	// input the numbers from prompt
	scanf("%d %d %d %d %d", &num1, &num2, &num3, &num4, &num5);

	// set the largest and smallest number as the first number
	int largest = 0;
	int smallest = 0;

	// find the largest number

	// check num1
	if ((num1 >= num2) && (num1 >= num3) && (num1 >= num4) && (num1 >= num5))
	{
		largest = num1;
	}
	// check num2
	if ((num2 >= num1) && (num2 >= num3) && (num2 >= num4) && (num2 >= num5))
	{
		largest = num2;
	}
	// check num3
	if ((num3 >= num1) && (num3 >= num2) && (num3 >= num4) && (num1 >= num5))
	{
		largest = num3;
	}
	// check num4
	if ((num4 >= num1) && (num4 >= num2) && (num4 >= num3) && (num4 >= num5))
	{
		largest = num4;
	}
	// check num5
	if ((num5 >= num1) && (num5 >= num2) && (num5 >= num3) && (num5 >= num4))
	{
		largest = num5;
	}

	// check for the smallest number

	// check num1
	if ((num1 <= num2) && (num1 <= num3) && (num1 <= num4) && (num1 <= num5))
	{
		smallest = num1;
	}
	// check num2
	if ((num2 <= num1) && (num2 <= num3) && (num2 <= num4) && (num2 <= num5))
	{
		smallest = num2;
	}
	// check num3
	if ((num3 <= num1) && (num3 <= num2) && (num3 <= num4) && (num3 <= num5))
	{
		smallest = num3;
	}
	// check num4
	if ((num4 <= num1) && (num4 <= num2) && (num4 <= num3) && (num4 <= num5))
	{
		smallest = num4;
	}
	// check num5
	if ((num5 <= num1) && (num5 <= num2) && (num5 <= num3) && (num5 <= num4))
	{
		smallest = num5;
	}

	// print the results
	printf("\nThe Max is : %d\n", largest);
	printf("The Min is : %d\n\n", smallest);

	// ensure the user can see the printed results
	getchar();
	
	return 0;
}

// wrote this before I notice we couldn't use arrays
//#include <stdio.h>
//
//
//// 
//#define SIZE 5
//
//
//// program entry
//int main(void)
//{
//
//    int numbers [SIZE]; 
//    int i;    
//   
//    printf("\n\nPlease enter five integers: ");
//
//    for(i = 0; i < SIZE; ++i)
//    {
//        scanf("%d", &numbers[i]);
//    }
//
//    // set the largest and smallest number as the first index of the array
//    int largest = numbers[0];
//    int smallest = numbers[0];
//
//
//    for(i = 0; i < SIZE - 1; ++i)
//    {		
//        if(numbers[i+1] > largest)
//        {
//            largest = numbers[i+1];   
//        }
//        if(numbers[i+1] < smallest)
//        {
//			smallest = numbers[i+1];
//        }		
//    }
//
//    printf("\nThe Max is : %d\n", largest);
//    printf("The Min is : %d\n\n", smallest);
//
//    getchar();
//	  getchar();
//
//    return 0;
//}

// EOF
]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ cat lab2_q1.c[1P lab2_q1.c[1P lab2_q1.cc lab2_q1.c
]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ cc lab2_q1.c[1@at[C[C[C[C[C[C[C[C[C[Cexit[K./a.out 


Please enter five integers: 78 5 -5 584 0

The Max is : 584
The Min is : -5

]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ ./a.out 


Please enter five integers: -1-1-1     -1 -1 -1 -2

The Max is : -1
The Min is : -2

]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ ./a.out cc lab2_q1.c[1@at[C[C[C[C[C[C[C[C[C[C[1P.c2.c
/*
* ASSIGNMENT	: Lab 2
* FILE	 		: lab2_q2.c
* AUTHOR		: Jason Choquette
* ID			: 104337378
* DATE			: September 28/14
* DESCRIPTION	: This program reads an integer and determines and prints 
		 		  whether it is odd or even.

				  Example:
				  Please enter an integer: 5
				  5 is odd!
*/


#include <stdio.h> // printf, scanf, getchar


// program entry
int main(void)
{
	// used to store the user's number
    int num = 0;
    
    printf("Please enter an integer: ");
    
    // input
    scanf("%d", &num);

    printf("%d is ", num);
    
    // if the number is even, print even
    if(num % 2 == 0)
    {
		printf("even!\n");
    }
    // if not print false
    else
    {
		printf("odd!\n");
    }

    printf("\n");

	// ensure the user can see the printed results
	getchar();
	
    return 0;
}


// EOF
]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ cat lab2_q2.c[1P lab2_q2.c[1P lab2_q2.cc lab2_q2.c
]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ cc lab2_q2.c[1@at[C[C[C[C[C[C[C[C[C[C[5P./a.out 
Please enter an integer: 985474
985474 is even!

]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ ./a.out 
Please enter an integer: 15
15 is odd!

]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ ./a.out cc lab2_q2.c[1@at[C[C[C[C[C[C[C[C[C[C[C[1P.c3.c
/*
* ASSIGNMENT	: Lab 2
* FILE	 		: lab2_q3.c
* AUTHOR		: Jason Choquette
* ID			: 104337378
* DATE			: September 28/14
* DESCRIPTION	: Write a program that reads in two integers and determines 
				  and prints if the first is a multiple of the second

				  Example:
				  Please enter two integer: 15 5
				  15 is a multiple of 5

				  Please enter two integer: 11 5
				  11 is not a multiple of 5
*/


#include <stdio.h> // printf, scanf, getchar


// program entry
int main(void)
{
	// used to store the user's two numbers
    int num1 = 0;
    int num2 = 0;
    
    
    printf("Please enter two integers: ");
 
    // input
    scanf("%d %d", &num1, &num2);

    printf("%d is ", num1);

	// use modulus operator to determine if multiple
    if(num1 % num2 != 0)
    {
		printf("not ");
    }

    printf("a multiple of %d\n\n", num2);   

	// ensure the user can see the printed results
	getchar();
	
    return 0;
}


// EOF
]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ cat lab2_q3.c[1P lab2_q3.c[1P lab2_q3.cc lab2_q3.c
]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ cc lab2_q3.c[1@at[C[C[C[C[C[C[C[C[C[C[5P./a.out cc lab2_q2.c[4P./a.out 
Please enter two integers: 45 12
45 is not a multiple of 12

]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ ./a.out 
Please enter two integers: 77 11
77 is a multiple of 11

]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ ./a.out 
Please enter two integers: 14 0
Floating point exception (core dumped)
]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ ./a.out 
Please enter two integers: 14 2
14 is a multiple of 2

]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ ./a.out cc lab2_q3.c[1@at[C[C[C[C[C[C[C[C[C[C[1P.c4.c
/*
* ASSIGNMENT	: Lab 2
* FILE	 		: lab2_q4.c
* AUTHOR		: Jason Choquette
* ID			: 104337378
* DATE			: October 02/14
* DESCRIPTION	: This program accepts one five-digit number, separates the
				  number into its individual digits and prints the digits
				  separated from one another by three spaces each.

				  Example:
				  Please enter a five digit number: 15389
				  The digits of 15389 are: 1 5 3 8 9
*/


#include <stdio.h>   // printf, scanf, getchar
#include <stdbool.h> // bool, true, false
#include <math.h>    // floor


// define a const max number length
#define NUMBER_LENGTH 5


// function prototype declaration
void printExtractedDigits(int, int *);
int * extractDigits(int);


// program entry
int main(void)
{
	// store the user's number
	int number = 0;
		
	printf("Please enter a five digit number: ");

	// input
	scanf("%d", &number);			

	// call the extractDigits function and store the resulting array in a new 
	// variable  
	int * extracted = extractDigits(number);
	
	// print the array of extracted digits
	printExtractedDigits(number, extracted);
		
	// ensure the user can see the printed results	
	getchar();	

	return 0;
}




/******************************************************************************
FUNCTION		: extractDigits

DESCRIPTION		: This function extracts the individual digits from a number

INPUT			: Type			: int
				: Description	: the number to be extracted

OUTPUT			: Type 			: number[]
				: Description	: the extracted digits from the initial number
******************************************************************************/
int * extractDigits(int number)
{
	// counter
	int i;
	
	// store the remainder of a number when % is calculated 
	int remainder = 0;

	// set the initial divisor to 5 decimal places
	int divisor = 10000;

	// once we go out of scope, variable not available anymore, 
	// so make static 
	static int digits[NUMBER_LENGTH];

	for (i = 0; i < NUMBER_LENGTH; i++)
	{
		// obtain the leading digit of the number
		digits[i] = number / divisor;
		// set the remainder as the modulus of the current number
		remainder = number % divisor;
		// reset the number to the remainder
		number = remainder;
		// shift down one decimal place
		divisor /= 10; 
	}

	return digits;
}




/******************************************************************************
FUNCTION		: printExtractedDigits

DESCRIPTION		: This function prints an array of integers

INPUT			: Type 			: int
				: Description	: the initial number the user entered

				: Type			: int[]
				: Description	: the array of digits to print

OUTPUT			: N/A
******************************************************************************/
void printExtractedDigits(int number, int * digits)
{
	// counter
	int i;

	// print out the contents of the array
	printf("The digits of %d are: ", number);

	// print each digit of the array
	for (i = 0; i < NUMBER_LENGTH; i++)
	{
		printf("%d   ", digits[i]);
	}

	printf("\n\n");
}


// EOF
]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ cat lab2_q4.c[5P./a.out cat lab2_q4.c[C[1P lab2_q4.c[1P lab2_q4.cc lab2_q4.c
]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ cc lab2_q4.c[1@at[C[C[C[C[C[C[C[C[C[C[5P./a.out 
Please enter a five digit number: 12345
The digits of 12345 are: 1   2   3   4   5   

]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ ./a.out 
Please enter a five digit number: 96521
The digits of 96521 are: 9   6   5   2   1   

]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ ./a.out cc lab2_q4.c[1@at[C[C[C[C[C[C[C[C[C[C[1P.c5.c
/*
* ASSIGNMENT	: Lab 2
* FILE	 		: lab2_q5.c
* AUTHOR		: Jason Choquette
* ID			: 104337378
* DATE			: October 02/14
* DESCRIPTION	: This program prompts the user to enter one five-digit number, 
				  separates the number into its individual digits and prints
				  the digits separated from one another by three spaces each. 
				  The program then prompts the user if he/she likes to enter 
				  another number, if so, the program logic repeats, prompting
				  for the new number and displaying its digits. The program 
				  repeats until the user answers no (N/n), he/she does not wish 
				  to enter another number. 
				  
				  See example below:
				  
				  Please enter a five digit number: 15389
				  The digits of 15389 are: 1   5   3   8   9
				  Would you like to try again? Y
				  Please enter a five digit number: 20010
				  The digits of 15389 are: 2   0   0   1   0
				  Would you like to try again? N
				  Goodbye! 				 
*/


#include <stdio.h>   // printf, scanf, getchar
#include <stdbool.h> // bool, true, false
#include <math.h>    // floor


// define a const max number length
#define NUMBER_LENGTH 5


// function prototype declaration
void printExtractedDigits(int, int *);
int * extractDigits(int);


// program entry
int main(void)
{
	// used to store the user's number
    int number = 0;
    
    // used to store the user's choice to continue (y/n)
    char try_again;

    while(true)
    {
        printf("Please enter a five digit number: ");
        
        // input
        scanf("%d", &number);

		// get the length of the integer (number of digits)
		int length = floor(log10(abs(number))) + 1;
		
		// make sure it is a 5-digit number. If not, ask user fo a new number
		if (length != NUMBER_LENGTH)
		{
			printf("%d is not a valid number\n\n", number);
			continue;
		}

		// call the extractDigits function and store the resulting array in a 
		// new variable  
		int * extracted = extractDigits(number);
	
		// print the array of extracted digits
		printExtractedDigits(number, extracted);
		
        printf("Would you like to try again? ");
        
        // input - whether the user would like to continue or not
        scanf(" %c", &try_again);

		if (try_again == 'y' || try_again == 'Y')
		{
			printf("\n\n");
			
			// repeat loop which prompts user for a new number
			continue;
		}
		else if (try_again == 'n' || try_again == 'N')
		{
			printf("Goodbye!");
			
			// leave the loop and quit the program
			break;
		}
		else
		{
			printf("Command not recognized.\n\n");			
		}
    }

	// ensure the user can see the printed results
	getchar();
	getchar();

	return 0;
}




/******************************************************************************
FUNCTION		: extractDigits

DESCRIPTION		: This function extracts the individual digits from a number

INPUT			: Type			: int
				: Description	: the number to be extracted

OUTPUT			: Type 			: number[]
				: Description	: the extracted digits from the initial number
******************************************************************************/
int * extractDigits(int number)
{
	// counter
	int i;
	
	// store the remainder of a number when % is calculated 
	int remainder = 0;

	// set the initial divisor to 5 decimal places
	int divisor = 10000;

	// once we go out of scope, variable not available anymore, 
	// so make static 
	static int digits[NUMBER_LENGTH];

	for (i = 0; i < NUMBER_LENGTH; i++)
	{
		// obtain the leading digit of the number
		digits[i] = number / divisor;
		// set the remainder as the modulus of the current number
		remainder = number % divisor;
		// reset the number to the remainder
		number = remainder;
		// shift down one decimal place
		divisor /= 10; 
	}
	
	return digits;
}




/******************************************************************************
FUNCTION		: printExtractedDigits

DESCRIPTION		: This function prints an array of integers

INPUT			: Type 			: int
				: Description	: the initial number the user entered

				: Type			: int[]
				: Description	: the array of digits to print

OUTPUT			: N/A
******************************************************************************/
void printExtractedDigits(int number, int * digits)
{
	// counter
	int i;

	// print out the contents of the array
	printf("The digits of %d are: ", number);

	// print each digit of the array
	for (i = 0; i < NUMBER_LENGTH; i++)
	{
		printf("%d   ", digits[i]);
	}

	printf("\n\n");
}


// EOF
]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ cat lab2_q5.c[1P lab2_q5.c[1P lab2_q5.cc lab2_q5.c[C[C[C[C[C[C[C[C[C[C -lm
]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ cc lab2_q5.c -lm[3Pat lab2_q5.c[5P./a.out 
Please enter a five digit number: 12345
The digits of 12345 are: 1   2   3   4   5   

Would you like to try again? y


Please enter a five digit number: 32
32 is not a valid number

Please enter a five digit number: 99999
The digits of 99999 are: 9   9   9   9   9   

Would you like to try again? Y


Please enter a five digit number: 12045
The digits of 12045 are: 1   2   0   4   5   

Would you like to try again? ^Y  Y


Please enter a five digit number: 02
2 is not a valid number

Please enter a five digit number: 986564654
986564654 is not a valid number

Please enter a five digit number: 14100
The digits of 14100 are: 1   4   1   0   0   

Would you like to try again? n
Goodbye!
]0;jason@jason-Satellite-C650D: ~jason@jason-Satellite-C650D:~$ exit
exit

Script done on Thu 02 Oct 2014 05:48:46 PM EDT
